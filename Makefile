# ==============================================
# 翻译功能：make trcode - 生成英文注释版本目录
# ==============================================
# 目标目录：原目录名 + -trcode（如 rui-gui → rui-gui-trcode）
TRCODE_DIR := $(notdir $(CURDIR))-trcode
# 需要翻译的文件后缀（覆盖Rust/C/汇编等代码文件）
TRCODE_SUFFIXES := .rs .c .h .s .S .toml .md
# 排除的目录（不翻译依赖、编译产物等）
TRCODE_EXCLUDE := build target .git .github

# 1. 生成翻译目录（核心目标）
.PHONY: trcode
trcode: cleantrcode
	@echo "=== 开始生成英文注释目录: $(TRCODE_DIR) ==="
	# 创建目标目录
	mkdir -p $(TRCODE_DIR)
	# 复制原目录结构（排除不需要的目录）
	rsync -av --exclude=$(TRCODE_EXCLUDE) --include="*/" --exclude="*" ./ $(TRCODE_DIR)/
	# 遍历所有需要翻译的文件，执行翻译
	find ./ -type f -name "*" | while read file; do \
		# 检查文件后缀是否在需要翻译的列表中
		if echo $(TRCODE_SUFFIXES) | grep -q $(echo $$file | grep -oE "\.[a-zA-Z0-9]+$"); then \
			# 构造目标文件路径
			tr_file=$(TRCODE_DIR)/$$file; \
			# 翻译中文注释（核心命令：只翻译//、/* */、#后的中文，保留代码逻辑）
			sed -E \
				# 翻译//后的中文注释
				-e 's#(//.*)([\u4e00-\u9fa5]+.*)#echo "\1"$(shell echo "\2" | trans :en -b)#ge' \
				# 翻译/* */内的中文注释
				-e 's#(/\*.*)([\u4e00-\u9fa5]+.*)(\*/)#echo "\1"$(shell echo "\2" | trans :en -b)"\3"#ge' \
				# 翻译#后的中文注释（如Makefile、Toml）
				-e 's#(#.*)([\u4e00-\u9fa5]+.*)#echo "\1"$(shell echo "\2" | trans :en -b)#ge' \
				$$file > $$tr_file; \
			@echo "已翻译: $$file → $$tr_file"; \
		fi; \
	done
	# 生成翻译说明文件
	echo "# English Comment Version (Generated by 'make trcode')\n\
This directory contains E-comOS RUI code with English comments.\n\
- Original code: ../$(notdir $(CURDIR))\n\
- Translation tool: translate-shell (based on Google Translate)\n\
- Note: Code logic is unchanged, only comments are translated." > $(TRCODE_DIR)/README-trcode.md
	@echo "=== 生成完成！请在 $(TRCODE_DIR) 目录工作 ==="

# 2. 清理翻译目录
.PHONY: cleantrcode
cleantrcode:
	@if [ -d $(TRCODE_DIR) ]; then \
		rm -rf $(TRCODE_DIR); \
		echo "已清理旧翻译目录: $(TRCODE_DIR)"; \
	fi